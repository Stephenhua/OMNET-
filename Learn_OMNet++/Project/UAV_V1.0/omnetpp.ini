[General]
#debug-on-errors = true
#record-eventlog = true
#eventlog-message-detail-pattern = Packet:declaredOn(Packet) or bitLength
#eventlog-message-detail-pattern = *

**.appType = "App"
**.app.packetLength = 4096 bytes

**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 2000m
**.constraintAreaMaxY = 2000m
**.constraintAreaMaxZ = 0m

# mobility


# **.rte*.mobility.typename = "MassMobility"
# **.rte*.mobility.initFromDisplayString = false
# **.rte*.mobility.changeInterval = truncnormal(2s, 0.5s)
# **.rte*.mobility.angleDelta = normal(0deg, 30deg)
# **.rte*.mobility.speed = truncnormal(20mps, 8mps)
# **.rte*.mobility.updateInterval = 10ms

[Config MobileNetwork_1]
network = Networks.MobileNetwork
**.destAddresses = "1 3"
**.sendIaTime = uniform(500ms, 2500ms)  # high traffic

#*.numHosts=5
**.rte*.mobility.typename = "AnsimMobility"
**.rte*.mobility.ansimTrace = xmldoc("ansimtrace.xml")
**.rte*.mobility.nodeId = -1  #means "host module's index"


[Config Net5_moving]
network = Networks.Net5_moving

**.destAddresses = "1 3"
**.sendIaTime = uniform(500ms, 1500ms)  # high traffic

# *.numHosts=10
**.rte*.mobility.typename = "AnsimMobility"
**.rte*.mobility.ansimTrace = xmldoc("ansimtrace.xml")
**.rte*.mobility.nodeId = -1  #means "host module's index"


[Config Net_uav]
network = Networks.Net_uav
**.app.packetLength = intuniform(128 byte, 1024 byte)
**.destAddresses = "0 1 2 3 4 5 6 7  8 9 "
**.sendIaTime = uniform(500ms, 1500ms)

**.drone*.mobility.typename = "GaussMarkovMobility"
**.drone*.mobility.alpha = 0.9
**.drone*.mobility.speed = 10mps
**.drone*.mobility.angle = 0deg
**.drone*.mobility.variance = 40
**.drone*.mobility.margin = 2000m

**.aew*.mobility.typename = "MassMobility"
**.aew*.mobility.initFromDisplayString = false
**.aew*.mobility.changeInterval = truncnormal(2s, 0.5s)
**.aew*.mobility.angleDelta = normal(0deg, 30deg)
 **.aew*.mobility.speed = truncnormal(20mps, 8mps)
 **.aew*.mobility.updateInterval = 100ms

#**.tans*.mobility.typename = "SWIMMobility"
#**.tans*.mobility.initFromDisplayString = false
# **.tans*.mobility.changeInterval = truncnormal(2s, 0.5s)
# **.tans*.mobility.angleDelta = normal(0deg, 30deg)
 #**.tans*.mobility.speed = truncnormal(20mps, 8mps)
 #**.tans*.mobility.updateInterval = 10ms

**.attack*.mobility.typename = "AnsimMobility"
**.attack*.mobility.ansimTrace = xmldoc("ansimtrace.xml")
**.attack*.mobility.nodeId = -1  

[Config Net_uav2]
network = Networks.Net_uav2
**.app.packetLength = intuniform(128 byte, 1024 byte)
**.destAddresses = "1 2 3 4 5 6 7 8  9 10"

**.drone*.mobility.typename = "GaussMarkovMobility"
**.drone*.mobility.alpha = 0.9
**.drone*.mobility.speed = 10mps
**.drone*.mobility.angle = 0deg
**.drone*.mobility.variance = 40
**.drone*.mobility.margin = 30m

**.aew*.mobility.typename = "MassMobility"
**.aew*.mobility.initFromDisplayString = false
**.aew*.mobility.changeInterval = truncnormal(2s, 0.5s)
**.aew*.mobility.angleDelta = normal(0deg, 30deg)
 **.aew*.mobility.speed = truncnormal(20mps, 8mps)
 **.aew*.mobility.updateInterval = 10ms
[Config Net60CutThrough]
network = Networks.Net60
description = "60 node network with cut-through switching"
**.app.packetLength = 32768 bytes
**.useCutThroughSwitching = true  # let packets flow through the routers
**.destAddresses = "1 50"
**.sendIaTime = uniform(1ms, 5ms)

[Config Net60StoreAndForward]
network = Networks.Net60
description = "60 node network with store-and-forward switching"
**.app.packetLength = 32768 bytes
**.destAddresses = "1 50"
**.sendIaTime = uniform(1ms, 5ms) 

[Config Net60Bursty]
network = Networks.Net60
**.appType = "BurstyApp"  # override "App" in [General]
**.app.packetLength = intuniform(2048 byte, 16384 byte)
**.destAddresses = "1 50"

[Config Net60a]
network = Networks.Net60a
**.destAddresses = "1 28 50"

[Config Net5]
network = Networks.Net5
**.destAddresses = "1 3"
**.sendIaTime = uniform(500ms, 1500ms)  # high traffic

[Config Net5SaturatedQueue]  # Note: this config is used by the Python/Pandas tutorial -- do not touch!
network = Networks.Net5
sim-time-limit = 200s
**.frameCapacity = 10
**.destAddresses = "1 4"
**.sendIaTime = uniform(100ms, 500ms)  # high traffic
**.app.packetLength = intuniform(50 bytes, 4096 bytes)
**.channel.*.result-recording-modes = -vector  # turn off vectors from channels
**.result-recording-modes = all  # turn on recording of optional vectors

[Config Net10]
network = Networks.Net10
**.app.packetLength = intuniform(128 byte, 1024 byte)
**.destAddresses = "1 6 8"

[Config Net10Experiment]
network = Networks.Net10
**.destAddresses = "1"
**.app.sendIaTime = exponential(${iaMean = 170..400 step 10 } ms)
**.queue[*].useCutThroughSwitching = ${cutThrough = false, true }
**.queue[*].frameCapacity = 100
**.vector-recording = false
sim-time-limit = 1200s

[Config RandomGraph]
network = Networks.RandomGraph
**.destAddresses = "0 2"

[Config Mesh]
network =Networks.Mesh
**.destAddresses = "0 18 52"

[Config RandomMesh]
network = Networks.RandomMesh
**.destAddresses = "0 18 52"

[Config NetBuilder]
network = Networks.Dynamic
**.address = int(replace(fullName(), "rte", ""))
**.destAddresses = "1 50"
